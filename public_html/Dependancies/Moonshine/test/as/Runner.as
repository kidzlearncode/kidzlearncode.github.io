package  {		import flash.display.MovieClip;	// import flash.display.LoaderInfo;	import flash.external.ExternalInterface;		import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLLoaderDataFormat;	import flash.events.Event;	//import com.adobe.serialization.json.JSON;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import flash.text.TextFieldAutoSize;		[SWF(backgroundColor="#000000", frameRate="30", width="360", height="360")]		public class Runner extends MovieClip {						private var shine : Moonshine;		private var tf : TextField;		public function Runner() {			init();		}				private function init() : void {			// Init text field			var myFormat:TextFormat = new TextFormat();			myFormat.size = 10;			myFormat.color = 0xdddddd;			myFormat.font = 'Monaco';			tf = new TextField();			tf.defaultTextFormat = myFormat;			tf.autoSize = TextFieldAutoSize.LEFT;			addChild(tf);			// Init VM			var env : Object = {				print: printToTextField			};			shine = new Moonshine(env);			// Init interface			setupExternalInterfaceCalls();		}		private function printToTextField(... args) : void {			var output : String = args.join('\t');			tf.appendText(output + '\n');		}						private function setupExternalInterfaceCalls() : void {			ExternalInterface.addCallback('loadScript', loadScript);				ExternalInterface.call('onReady');		}		private function loadScript (filename : String) : void {			trace('[loading ' + filename + '...]');						var urlRequest : URLRequest = new URLRequest(filename);			var urlLoader : URLLoader = new URLLoader(urlRequest);			urlLoader.dataFormat = URLLoaderDataFormat.TEXT;			urlLoader.addEventListener(Event.COMPLETE, onLoadScriptComplete); 		}		private function onLoadScriptComplete (event : Event) : void {			trace('[script loaded]');						var file : Object = {};			file['data'] = JSON.parse(event.target['data']);			file['url'] = '(script)';						shine.execute(file);		}	}	}